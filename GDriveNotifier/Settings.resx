<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAQEAAAAEAGABhBAAAFgAAAIlQTkcNChoKAAAADUlIRFIAAABAAAAAQAgGAAAAqmlx3gAAAAFz
        UkdCAK7OHOkAAAAEZ0FNQQAAsY8L/GEFAAAACXBIWXMAAA7DAAAOwwHHb6hkAAAD9klEQVR4Xu2az0sV
        URTHn0QQ0a6WQVQI9eD5E1tVrgpqVZAtrCRC2rSwWkQuQipoU7RJQghJiKDctAmECCNXrowkwv9AQqIs
        KCPSvt/3zryu1zvXeTPzxhdzPvBlxnvOPefcmXvn17OgKIqiKIqiKIqiKPWhp6dnU1tbW7G1tfU0toPQ
        MPafYvuCkv1h2sSnyD7S/f8Eg2hub2+/iu0E9A1aqVHsMyExmiVsY9PZ2bkDZ/AKCn4ng0hTM4zNHJKu
        ccBZ2o8CR1HgT6vo1CU5RplT0m8cOBv7UMw49CcoMEMx5zhrkHKyQ6b6Q+i3VVTmYg2sJaul0YSk/dBn
        s4gwobAf2C7b7TVoWWK4bLZYUz9rrJSaMi0tLbuRYNJIGCYW/QrbIWjOaI8rxhiSmFEO5iRrlbLTARec
        cyhg0ZGsKtg5FcewX4SOQd+heWgE4v39LrYfIGf/dcRYjMlniTHmMmxrBPsia5by44N1tVUG5Uwk4ll5
        DpXv1fA/iv0l6H53d/eWcqB/NMF+Hoo6rU0tMTaDYL8Z4sXXOyNYO8dQzlwrpVJpDwK8dwUORDum20Hp
        Uujo6NiLtq+wPZAmJ7CfMuNEFWMzh4RhjYei1MixSJdoYPocRscFV0ARz/Agju5m6UJ4dt+i/UuxWNwm
        baHA77XEqknMge7VCx1rQDsfr1lTWJ8Fjkm6+EGHXig0GDSLI1oS9yoo5ITYn0mTFxR1yYhZkzALTkqY
        KmgrwTZr+xr6BfWKuxs4DEC+dTXiWNdlYJuiDwZ2T5q8wC84YHE0JWFWwdpg40XX1Yfi2AbEfTVYyzcs
        56pQLB8/+8R1DZgQO2EPDtwTafaCmBfFP46WmVNCrQH2PqnZ1XeFYxXXCnC+6XIUzcN+QFydwH7G8P8U
        NktM4PfS6FOzkPOshHLCmuHH27CzP64JtwJHvr05nWD7CMddZUcP8Ltj9b0tJiewH4G8t7D1xJwSLhTW
        zjG4+lMcO4sPe8CZ7urq2i6xvCDGI6svB3fd9VED7cc9OSOLOSWkF44B/tN2f4p11OsABJrjVMOauwCf
        a/j7jWWPLcRN7QBcdhkp2OIugbqLOSV9KJGWAMFOmhfBTISciS6CHLO4VkjxNpiF0r0NBsCY+EEoI6X/
        IBQAh6SPwnUXc0naKqwJNt+jMMfkfxQOwMUjycuQyz81MQdzVVLW4WUoAAc0yeuw0z+pGDuT1+EAHN0k
        H0RcvklkfxBhzvUuvI85BvZJBKZP3E9iTt8Y2phPYiaY6vn9KGqQ38/iJlhXuf1hZBVIms+fxmxwwcnn
        j6M2sjT4gWXGLDolNe7P4y5QcP7+QSKMXP6LjKIoiqIoiqIoitKwFAp/AYi8wZ63c7kVAAAAAElFTkSu
        QmCC
</value>
  </data>
</root>